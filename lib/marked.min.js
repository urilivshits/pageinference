/**
 * marked - a markdown parser
 * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/markedjs/marked
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).marked={})}(this,function(e){"use strict";function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function n(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function i(e){return i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},i(e)}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function a(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function o(e,t,n){return o=a()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&s(i,n.prototype),i},o.apply(null,arguments)}function l(e){var t="function"==typeof Map?new Map:void 0;return l=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return o(e,arguments,i(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),s(r,e)},l(e)}var c=function(e){function t(){var t;return(t=e.call(this)||this).message="Cannot find module 'marked'",t.code="MODULE_NOT_FOUND",t}return r(t,e),t}(l(Error));function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}var p=Object.prototype.hasOwnProperty;function h(e,t){return p.call(e,t)}var f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)h(n,r)&&(e[r]=n[r])}return e};function d(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var g={baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1};function m(e){e.use=function(){for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];var i,s=this.defaults=f({},this.defaults),a=n[0];return"function"==typeof a?(n[0]=function(){return function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return a.apply(this,n)}}(),i=n):(i=n.map(function(e){return"object"===u(e)?f({},e):e})),i.forEach(function(e){s=f({},s,e)}),this.defaults=s,this}}function v(e){return e.replace(/[^\w:]/g,"").toLowerCase()}function y(e){return e.replace(/[&<>"']/g,function(e){return"&"===e?"&amp;":"<"===e?"&lt;":">"===e?"&gt;":'"'===e?"&quot;":"'"===e?"&#39;":void 0})}function x(e,t){return e=e.source||e,t=t||"",{replace:function(t,n){return n=(n=n.source||n).replace(/(^|[^\[])\^/g,"$1"),e=e.replace(t,n),this},getRegex:function(){return new RegExp(e,t)}}}function b(e,t,n){if(e){try{var r=decodeURIComponent(e).replace(/[^A-Za-z0-9\/:]/g,"").toLowerCase()}catch(e){return null}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:")||0===r.indexOf("data:"))return null}t&&!n&&(e=e.replace(/^#/,"#/"));try{e=encodeURI(e).replace(/%25/g,"%")}catch(e){return null}return e}var k={exec:function(){}};function w(e){for(var t,n,r=1;r<arguments.length;r++)for(n in t=arguments[r])h(t,n)&&(e[n]=t[n]);return e}function S(e,t){var n=e.replace(/\|/g,function(e,t,n){for(var r=!1,i=t;--i>=0&&"\\"===n[i];)r=!r;return r?"|":" |"}).split(/ \|/),r=0;if(n.length>t)n.splice(t);else for(;n.length<t;)n.push("");for(;r<n.length;r++)n[r]=n[r].trim().replace(/\\\|/g,"|");return n}function E(e,t,n){if(0===e.length)return"";for(var r=0;r<e.length;){var i=e.charAt(e.length-r-1);if(i!==t||n){if(i===t||!n)break;r++}else r++}return e.substr(0,e.length-r)}function A(e,t){if(-1===e.indexOf(t[1]))return-1;for(var n=e.length,r=0,i=0;i<n;i++)if("\\"===e[i])i++;else if(e[i]===t[0])r++;else if(e[i]===t[1]&&--r<0)return i;return-1}function T(e){e&&e.sanitize&&!e.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function C(e,t){if(t<1)return"";for(var n="";t>1;)1&t&&(n+=e),t>>=1,e+=e;return n+e}function j(e,t,n,r){var i=t.href,s=t.title?y(t.title):null,a=e[1].replace(/\\([\[\]])/g,"$1");if("!"!==e[0].charAt(0)){r.state.inLink=!0;var o={type:"link",raw:n,href:i,title:s,text:a,tokens:r.inlineTokens(a,[])};return r.state.inLink=!1,o}return{type:"image",raw:n,href:i,title:s,text:y(a)}}function O(e,t){var n=e.match(/^(\s+)(?:```)/);if(null===n)return t;var r=n[1];return t.split("\n").map(function(e){var t=e.match(/^\s+/);return null===t?e:t[0].length>=r.length?e.slice(r.length):e}).join("\n")}function I(e){return e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1'").replace(/'/g,"'").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1"").replace(/"/g,""").replace(/\.{3}/g,"…")}function R(e){var t,n,r="",i=e.length;for(t=0;t<i;t++)n=e.charCodeAt(t),Math.random()>.5&&(n="x"+n.toString(16)),r+="&#"+n+";";return r}m(e),e.defaults=g,e.parse=function(e,t){return new c},e.options=e.setOptions=function(e){return f(this.defaults,e),this},e.getDefaults=function(){return Object.assign({},this.defaults)},e.walkTokens=function(e,t){var n=this;e.forEach(function(e){var r=[];t.call(n,e),e.tokens&&(r=r.concat(n.walkTokens(e.tokens,t))),e.items&&(r=r.concat(n.walkTokens(e.items,t))),e.rows&&e.rows.forEach(function(e){r=r.concat(n.walkTokens(e,t))}),r.length>0&&(e.tokens=r)})},e.parseInline=function(e,t){if(null==e)throw new Error("marked.parseInline(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");T(t=f({},this.defaults,t||{}));try{var n=new c;return n.options=t,n.lexer.inlineTokens(e)}catch(e){if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",t.silent)return"<p>An error occurred:</p><pre>"+y(e.message+"",!0)+"</pre>";throw e}},e.Parser=c,e.parser=c.parse,e.Renderer=c,e.TextRenderer=c,e.Lexer=c,e.lexer=c.lex,e.Tokenizer=c,e.Slugger=c,e.parse=e.Parser.parse,e.parseInline=e.Parser.parseInline,e.parse=e.Parser.parse,e.parser=e.Parser.parse,e.renderer=new c,e.TextRenderer=c,e.Lexer=c,e.lexer=c.lex,e.Tokenizer=c,e.Slugger=c,e.options=e.setOptions=function(e){return f(this.defaults,e),this},e.getDefaults=function(){return Object.assign({},this.defaults)},e.defaults=g,e.use=function(){return m(this),this.apply(this,arguments)},e.walkTokens=function(e,t){return this.Parser.walkTokens(e,t)},e.parseInline=function(e,t){return this.Parser.parseInline(e,t)}}); 